{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tongl\\\\OneDrive\\\\Desktop\\\\Fitness\\\\\\u65B0\\u589E\\u8CC7\\u6599\\u593E\\\\my-app\\\\src\\\\pages\\\\PrivateRoute.page.js\",\n  _s = $RefreshSig$();\nimport { useContext } from \"react\";\nimport { Navigate, Outlet, useLocation } from \"react-router-dom\";\nimport { UserContext } from \"../contexts/user.context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = () => {\n  _s();\n  // Fetching the user from the user context.\n  const {\n    user\n  } = useContext(UserContext);\n  const location = useLocation();\n  const redirectLoginUrl = `/login?redirectTo=${encodeURI(location.pathname)}`;\n\n  // If the user is not logged in we are redirecting them\n  // to the login page. Otherwise we are letting them to\n  // continue to the page as per the URL using <Outlet />.\n  return !user ? /*#__PURE__*/_jsxDEV(Navigate, {\n    to: redirectLoginUrl\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 17\n  }, this) : /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 54\n  }, this);\n};\n_s(PrivateRoute, \"M79qLDH95oiTF2KFpNG0BOxgtck=\", false, function () {\n  return [useLocation];\n});\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["useContext","Navigate","Outlet","useLocation","UserContext","jsxDEV","_jsxDEV","PrivateRoute","_s","user","location","redirectLoginUrl","encodeURI","pathname","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/tongl/OneDrive/Desktop/Fitness/新增資料夾/my-app/src/pages/PrivateRoute.page.js"],"sourcesContent":["import { useContext } from \"react\";\nimport { Navigate, Outlet, useLocation } from \"react-router-dom\";\nimport { UserContext } from \"../contexts/user.context\";\n \nconst PrivateRoute = () => {\n \n // Fetching the user from the user context.\n const { user } = useContext(UserContext);\n const location = useLocation();\n const redirectLoginUrl = `/login?redirectTo=${encodeURI(location.pathname)}`;\n \n // If the user is not logged in we are redirecting them\n // to the login page. Otherwise we are letting them to\n // continue to the page as per the URL using <Outlet />.\n return !user ? <Navigate to={redirectLoginUrl} /> : <Outlet /> ;\n}\n \nexport default PrivateRoute;\n"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,SAASC,QAAQ,EAAEC,MAAM,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,SAASC,WAAW,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAE1B;EACA,MAAM;IAAEC;EAAK,CAAC,GAAGT,UAAU,CAACI,WAAW,CAAC;EACxC,MAAMM,QAAQ,GAAGP,WAAW,EAAE;EAC9B,MAAMQ,gBAAgB,GAAI,qBAAoBC,SAAS,CAACF,QAAQ,CAACG,QAAQ,CAAE,EAAC;;EAE5E;EACA;EACA;EACA,OAAO,CAACJ,IAAI,gBAAGH,OAAA,CAACL,QAAQ;IAACa,EAAE,EAAEH;EAAiB;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG,gBAAGZ,OAAA,CAACJ,MAAM;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG;AAC/D,CAAC;AAAAV,EAAA,CAXKD,YAAY;EAAA,QAIAJ,WAAW;AAAA;AAAAgB,EAAA,GAJvBZ,YAAY;AAalB,eAAeA,YAAY;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}